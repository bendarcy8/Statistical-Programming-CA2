# Define the function to transform date and time to UTC
> transform_to_utc <- function(date, time, timezone) {
+     # Define timezone offsets
+     timezone_offsets <- list("UTC" = 0, "Eastern time" = -5, "Pacific time" = -8)
+     
+     # Parse date and time
+     date_parts <- str_split(date, "/", simplify = TRUE)
+     day <- as.integer(date_parts[1])
+     month <- as.integer(date_parts[2])
+     year <- as.integer(date_parts[3])
+     
+     time_parts <- str_split(time, ":", simplify = TRUE)
+     hour <- as.integer(time_parts[1])
+     minute <- as.integer(time_parts[2])
+     second <- as.integer(time_parts[3])
+     
+     # Apply timezone offset
+     offset <- timezone_offsets[[timezone]]
+     adjusted_hour <- hour - offset
+     
+     # Adjust for day transitions
+     if (adjusted_hour < 0) {
+         adjusted_hour <- adjusted_hour + 24
+         day <- day - 1
+     } else if (adjusted_hour >= 24) {
+         adjusted_hour <- adjusted_hour - 24
+         day <- day + 1
+     }
+     
+     # Adjust for month and year transitions
+     days_in_month <- c(31, 28 + ifelse((year %% 4 == 0 & year %% 100 != 0) | (year %% 400 == 0), 1, 0),
+                        31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
+     if (day < 1) {
+         month <- month - 1
+         if (month < 1) {
+             month <- 12
+             year <- year - 1
+         }
+         day <- days_in_month[month]
+     } else if (day > days_in_month[month]) {
+         day <- 1
+         month <- month + 1
+         if (month > 12) {
+             month <- 1
+             year <- year + 1
+         }
+     }
+     
+     # Format the adjusted datetime as "YYYY-MM-DD HH:MM:SS"
+     utc_date <- sprintf("%04d-%02d-%02d", year, month, day)
+     utc_time <- sprintf("%02d:%02d:%02d", adjusted_hour, minute, second)
+     paste(utc_date, utc_time)
+ }
> 
> 
> # Apply UTC transformation
> clicks <- clicks %>%
+     mutate(utc_datetime = mapply(transform_to_utc, date, time, timezone))
> 
> impressions <- impressions %>%
+     mutate(utc_datetime = mapply(transform_to_utc, date, time, timezone))
> 
> # Join the datasets
> campaigns_with_advertisers <- campaigns %>%
+     inner_join(advertisers, by = c("advertiser_id" = "ID"))
> 
> clicks_processed <- clicks %>%
+     inner_join(campaigns_with_advertisers, by = c("campaign_id" = "id")) %>%
+     rename(
+         click_name = name.x,      # Rename 'name.x' to indicate it's from the clicks dataset
+         campaign_name = name.y    # Rename 'name.y' to clarify it's from the campaigns dataset
+     )
> 
> impressions_processed <- impressions %>%
+     inner_join(campaigns_with_advertisers, by = c("campaign_id" = "id")) %>%
+     rename(
+         impression_name = name.x, # Rename 'name.x' to indicate it's from the impressions dataset
+         campaign_name = name.y    # Rename 'name.y' to clarify it's from the campaigns dataset
+     )
> 
> # Save the processed data to CSV
> write_csv(clicks_processed, "clicks_processed.csv")
> write_csv(impressions_processed, "impressions_processed.csv")